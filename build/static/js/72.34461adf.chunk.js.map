{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","pages/other/Otp.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","Verify_otp","state","otp","resenddd","setState","interval","sendOtp","customer_email","mobile","msg","input","errors","handleChange","handleSubmit","bind","this","seconds","evt","target","name","value","event","preventDefault","axios","post","then","res","console","log","alert","catch","error","response","content","headerTop","Container","defaultActiveKey","Content","Pane","eventKey","onSubmit","onChange","numInputs","type","OTPError","React","Component"],"mappings":"mHAAA,oCAoBeA,IAhBI,WACjB,OACE,yBAAKC,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAD,CACEC,UAAW,mCACXC,KAAMC,IACNC,UAAW,c,0OCEEC,E,kDAEjB,aAAe,IAAD,8BACd,gBAFFC,MAAQ,CAAEC,IAAK,IACC,EA8BpBC,SAAW,WAET,EAAKC,SAAS,CAACF,IAAI,KACnB,EAAKG,WACD,EAAKC,WAhCL,EAAKL,MAAO,CACVM,eAAe,GAEfC,OAAO,WACPN,IAAK,OACLO,IAAI,GAKJC,MAAO,GACPC,OAAQ,IAMZ,EAAKC,aAAe,SAACV,GAAD,OAAS,EAAKE,SAAS,CAAEF,SAC7C,EAAKW,aAAe,EAAKA,aAAaC,KAAlB,gBApBJ,E,4CAuChB,WAEEC,KAAKX,SAAS,CAAEY,QAAS,O,0BAU/B,SAAaC,GAEbF,KAAKX,SAAL,eAAiBa,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,U,0BAI1C,SAAaC,GACXA,EAAMC,iBAWIC,IAAMC,KAAK,2CAA2CT,KAAKd,OAEjEwB,MAAK,SAAAC,GACDC,QAAQC,IAAIF,GACZG,MAAM,aAGPC,OAAM,SAACC,GACNJ,QAAQC,IAAIG,EAAMC,e,oBAMlC,WACI,OACA,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,iDACA,0BACEb,KAAK,cACLc,QAAQ,gEAQZ,kBAAC,IAAD,CAAWC,UAAU,WAEnB,kBAAC,IAAD,MACA,yBAAKvC,UAAU,qCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,0BACb,kBAAC,IAAIwC,UAAL,CAAeC,iBAAiB,SAE9B,kBAAC,IAAIC,QAAL,KACE,kBAAC,IAAIC,KAAL,CAAUC,SAAS,SACjB,yBAAK5C,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BAAO6C,SAAUzB,KAAKF,cAClB,6BACJ,kBAAC,IAAD,CACXO,MAAOL,KAAKd,MAAMC,IACjBuC,SAAU1B,KAAKH,aACf8B,UAAW,EACXC,KAAK,SACLxB,KAAK,MAELvB,UAAW,iCACRmB,KAAKd,MAAM2C,SAAS7B,KAAKd,MAAM2C,SAAS,MAkB/B,yBAAKjD,UAAU,cAQb,4BAASgD,KAAK,QAAd,QAGA,4BAASA,KAAK,UAAd,6B,GAzJYE,IAAMC","file":"static/js/72.34461adf.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport OtpInput from \"react-otp-input\";\nimport axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport Tab from \"react-bootstrap/Tab\";\n// import Nav from \"react-bootstrap/Nav\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\n\n// const Phone = ({ location }) => {\n//   const { pathname } = location;\n// function Otp(props) {\n    export default class Verify_otp extends React.Component {\n      state = { otp: '' };\n        constructor() {\n        super();\n        this.state= {\n          customer_email:\"\",\n          // visible : false,\n          mobile:\"12345678\",\n          otp: \"1234\",\n          msg:\"\",\n     \n        //   \"status\": true,\n    \n          \n          input: {},\n          errors: {},\n      \n        }\n      //     this.handleChange = otp => this.setState({ otp });\n      //     this.handleChange = this.handleChange.bind(this);\n      // this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleChange = (otp) => this.setState({ otp });\n      this.handleSubmit = this.handleSubmit.bind(this);\n    } \n\n\n  \n  \n    \n\n  \n  \n  resenddd = () => {\n  \n    this.setState({otp:''})\n    this.interval()\n        this.sendOtp()\n    \n    \n    \n      }\n      interval() {\n  \n        this.setState({ seconds: 26 });\n    \n        // let myInterval = setInterval(() => {\n        //     if (this.state.seconds == 0) {\n        //         clearInterval(myInterval);\n        //     } else {\n        //         this.setState({ seconds: this.state.seconds - 1 });\n        //     }\n        // }, 1000)\n    }\n  handleChange(evt) {\n  // const value=evt.target.value;\n  this.setState({ [evt.target.name]: evt.target.value });\n  }  \n    \n    \n      handleSubmit(event)  {\n        event.preventDefault();\n        // this.otpIntegration()\n      \n      \n \n        // handleverifyotp=()=>{\n        //   const sendData = {\n        //     customer_email:localStorage.getItem('customer_email'),\n        //     status: this.state.status,\n        //   };\n                \n                  axios.post(\"http://35.154.134.118/api/user/verifyotp\",this.state)\n            \n           .then(res => {\n                console.log(res);\n                alert(\"anjali\")\n              \n              })\n              .catch((error) => {\n                console.log(error.response)\n            });\n        }\n        \n\n\nrender() {\n    return(\n    <Fragment>\n      <MetaTags>\n        <title>Buynaa | Login</title>\n        <meta\n          name=\"description\"\n          content=\"Compare page of flone react minimalist eCommerce template.\"\n        />\n      </MetaTags>\n      {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem> */}\n      {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}> */}\n      {/* <BreadcrumbsItem>\n        Login Register\n      </BreadcrumbsItem> */}\n      <LayoutOne headerTop=\"visible\">\n        {/* breadcrumb */}\n        <Breadcrumb />\n        <div className=\"login-register-area pt-100 pb-100\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\n                <div className=\"login-register-wrapper\">\n                  <Tab.Container defaultActiveKey=\"login\">\n                   \n                    <Tab.Content>\n                      <Tab.Pane eventKey=\"login\">\n                        <div className=\"login-form-container\">\n                          <div className=\"login-register-form\">\n                            <form  onSubmit={this.handleSubmit}>\n                                <div>\n                            <OtpInput\n                 value={this.state.otp}\n                  onChange={this.handleChange}\n                  numInputs={4}\n                  type=\"number\"\n                  name=\"otp\"\n                  \n                  separator={<span></span>}/>\n                    {this.state.OTPError?this.state.OTPError:null}\n                   </div>\n                \n                              \n                              {/* <input\n                               onChange={this.changeHandler}\n                                type=\"number\"\n                                name=\"mobile \"\n                                placeholder=\"Enter your OTP\"\n                              /> */}\n                              \n                              {/* <input\n                               onChange={this.changeHandler}\n                                type=\"number\"\n                                name=\"otp \"\n                                placeholder=\"Enter your OTP\"\n                              /> */}\n                             \n                              <div className=\"button-box\">\n                                {/* <div className=\"login-toggle-btn\">\n                                  <input type=\"checkbox\" />\n                                  <label className=\"ml-10\">Remember me</label>\n                                  <Link to={process.env.PUBLIC_URL + \"/\"}>\n                                    Forgot Password?\n                                  </Link>\n                                </div> */}\n                                <button  type=\"back\">\n                                  Back\n                                </button>\n                                <button  type=\"submit\">\n                                  SendOTP\n                                </button>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </Tab.Pane>\n           \n                    </Tab.Content>\n                  </Tab.Container>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </LayoutOne>\n    </Fragment>\n   );\n}\n}\n\n\n                         \n\n"],"sourceRoot":""}